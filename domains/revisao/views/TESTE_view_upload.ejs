<!-- Modal component for viewing uploaded files -->
<div class="modal fade" id="fileViewerModal" tabindex="-1" aria-labelledby="fileViewerModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="fileViewerModalLabel">Visualizador de Arquivos</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
      </div>
      <div class="modal-body">
        <!-- Aqui o preview do arquivo será injetado dinamicamente -->
        <div id="file-viewer-content" class="text-center">
          <p class="text-muted">Nenhum arquivo selecionado.</p>
        </div>
      </div>
      <div class="modal-footer">
        <a type="button" class="btn btn-link" href="" target="_blank">Abrir em nova guia</a>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
        <button type="button" id="file-download-btn" class="btn btn-primary">Baixar</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Função utilitária para abrir o modal e carregar um arquivo por URL
  function openFileViewer(url, filename) {
    const container = document.getElementById('file-viewer-content');
    container.innerHTML = '';

    if (!url) {
      container.innerHTML = '<p class="text-muted">URL inválida.</p>';
    }

    document.querySelector("#fileViewerModal .modal-dialog .modal-content .modal-footer a.btn.btn-link").href = url

    // Detectar tipo simples pelo sufixo
    const lower = url ? url.toLowerCase() : '';
    if (lower.match(/\.(jpeg|jpg|png|gif|webp)$/)) {
      const img = document.createElement('img');
      img.src = url;
      img.alt = filename || 'Imagem';
      img.className = 'img-fluid';
      container.appendChild(img);
    } else if (lower.match(/\.(mp4|webm|ogg)$/)) {
      const vid = document.createElement('video');
      vid.src = url;
      vid.controls = true;
      vid.className = 'w-100';
      container.appendChild(vid);
    } else {
      // fallback: iframe/pdf or link
      const iframe = document.createElement('iframe');
      iframe.src = url;
      iframe.className = 'w-100';
      iframe.style.height = '60vh';
      container.appendChild(iframe);
    }

    const downloadBtn = document.getElementById('file-download-btn');
    downloadBtn.onclick = () => {
      const a = document.createElement('a');
      a.href = url;
      a.download = filename || '';
      document.body.appendChild(a);
      a.click();
      a.remove();
    };

    const modalEl = new bootstrap.Modal(document.getElementById('fileViewerModal'));
    modalEl.show();
  }
</script>
